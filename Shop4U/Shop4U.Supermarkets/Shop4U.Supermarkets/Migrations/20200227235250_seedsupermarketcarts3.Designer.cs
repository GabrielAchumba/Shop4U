// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop4U.Supermarkets.Models;

namespace Shop4U.Supermarkets.Migrations
{
    [DbContext(typeof(SupermarketDbContext))]
    [Migration("20200227235250_seedsupermarketcarts3")]
    partial class seedsupermarketcarts3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shop4U.Supermarkets.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Base64String")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCartegoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.ItemCartegory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Base64String")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemCartegories");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.ItemGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Base64String")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemGroups");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.ItemPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Base64String")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MarketGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MarketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemPrices");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.ItemType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Base64String")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.Supermarket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Base64String")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Supermarkets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("becd140f-8731-419e-a0fe-cde99c2ada5b"),
                            Description = "",
                            Name = "Shoprite"
                        },
                        new
                        {
                            Id = new Guid("394291e9-ab8f-47c9-b134-4fbc97f18fbe"),
                            Description = "",
                            Name = "Justrite"
                        },
                        new
                        {
                            Id = new Guid("b75b01e0-bb24-4369-8cdc-48581ebfd52b"),
                            Description = "",
                            Name = "Welcome U"
                        },
                        new
                        {
                            Id = new Guid("8f1e4822-1607-4642-a520-2f1a02b24bfb"),
                            Description = "",
                            Name = "Livinchin"
                        },
                        new
                        {
                            Id = new Guid("69f0c70a-c5a2-4669-87f2-361097a90126"),
                            Description = "",
                            Name = "Spar Mall"
                        },
                        new
                        {
                            Id = new Guid("d90d012e-866d-4ebb-9499-4283831e6f3e"),
                            Description = "",
                            Name = "Next Cash And Carry"
                        },
                        new
                        {
                            Id = new Guid("bb9f7396-b694-4e82-accd-fb144460f581"),
                            Description = "",
                            Name = "Everyday"
                        },
                        new
                        {
                            Id = new Guid("9fdfa74a-f892-4a18-b65b-7f82495a0da7"),
                            Description = "",
                            Name = "Market Square"
                        },
                        new
                        {
                            Id = new Guid("b924c652-bc77-4d46-ab85-65f822487588"),
                            Description = "",
                            Name = "PEP Store"
                        });
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.SupermarketCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Base64String")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SupermarketCarts");
                });
#pragma warning restore 612, 618
        }
    }
}
