// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop4U.Supermarkets.Models;

namespace Shop4U.Supermarkets.Migrations
{
    [DbContext(typeof(SupermarketDbContext))]
    [Migration("20200201134232_SeedSupermarkets")]
    partial class SeedSupermarkets
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shop4U.Supermarkets.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ItemCartegoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.ItemCartegory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemCartegories");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.ItemGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemGroups");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.ItemType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.Supermarket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Supermarkets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21b2803e-edc6-43a2-a4b3-9c373746107d"),
                            Description = "",
                            Name = "Shoprite"
                        },
                        new
                        {
                            Id = new Guid("d74fa74b-6004-4fe0-b6fe-f640e4882718"),
                            Description = "",
                            Name = "Justrite"
                        },
                        new
                        {
                            Id = new Guid("99728f1c-025a-4936-ab5f-496cf6a5a941"),
                            Description = "",
                            Name = "Welcome U"
                        },
                        new
                        {
                            Id = new Guid("b8e31a91-219f-4400-adac-78139a6c60e1"),
                            Description = "",
                            Name = "Livinchin"
                        },
                        new
                        {
                            Id = new Guid("6cec792b-b744-4619-85c4-c39a14da5df6"),
                            Description = "",
                            Name = "Spar Mall"
                        },
                        new
                        {
                            Id = new Guid("d2396491-e87a-4cb2-9854-eaf2ebfc1464"),
                            Description = "",
                            Name = "Next Cash And Carry"
                        },
                        new
                        {
                            Id = new Guid("f508e8a1-86b5-45aa-b207-44fb748f8ece"),
                            Description = "",
                            Name = "Everyday"
                        },
                        new
                        {
                            Id = new Guid("47a2a286-99ba-46a1-b812-b028497c8ca0"),
                            Description = "",
                            Name = "Market Square"
                        },
                        new
                        {
                            Id = new Guid("9f14d4bf-51b9-4e24-8105-3fcd1fb68a38"),
                            Description = "",
                            Name = "PEP Store"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
