// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop4U.Supermarkets.Models;

namespace Shop4U.Supermarkets.Migrations
{
    [DbContext(typeof(SupermarketDbContext))]
    [Migration("20200201134437_SeedSupermarkets2")]
    partial class SeedSupermarkets2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shop4U.Supermarkets.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ItemCartegoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.ItemCartegory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemCartegories");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.ItemGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemGroups");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.ItemType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.Supermarket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Supermarkets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c014f70-28be-47c9-822e-41440df52587"),
                            Description = "",
                            Name = "Shoprite"
                        },
                        new
                        {
                            Id = new Guid("a6839118-7bea-4a06-beae-02296c1fe3d8"),
                            Description = "",
                            Name = "Justrite"
                        },
                        new
                        {
                            Id = new Guid("ae7852a0-ff22-47f6-9600-48d916fdb033"),
                            Description = "",
                            Name = "Welcome U"
                        },
                        new
                        {
                            Id = new Guid("90c39ddf-06a9-42ba-8f72-f1cd828d40f1"),
                            Description = "",
                            Name = "Livinchin"
                        },
                        new
                        {
                            Id = new Guid("a3d41ead-a606-4cf3-b5a5-ad1da5ed0dce"),
                            Description = "",
                            Name = "Spar Mall"
                        },
                        new
                        {
                            Id = new Guid("c45ee5ff-14a7-43db-aedc-6d39afabac2e"),
                            Description = "",
                            Name = "Next Cash And Carry"
                        },
                        new
                        {
                            Id = new Guid("07a19635-521c-4eff-a343-06f230675b4b"),
                            Description = "",
                            Name = "Everyday"
                        },
                        new
                        {
                            Id = new Guid("e8c07b11-45c4-4cee-8e32-f22c9e5ad351"),
                            Description = "",
                            Name = "Market Square"
                        },
                        new
                        {
                            Id = new Guid("46e8b142-db06-4343-9eae-6783cb0676d4"),
                            Description = "",
                            Name = "PEP Store"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
