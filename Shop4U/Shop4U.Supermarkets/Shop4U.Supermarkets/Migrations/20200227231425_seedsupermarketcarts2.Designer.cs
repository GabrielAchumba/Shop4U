// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop4U.Supermarkets.Models;

namespace Shop4U.Supermarkets.Migrations
{
    [DbContext(typeof(SupermarketDbContext))]
    [Migration("20200227231425_seedsupermarketcarts2")]
    partial class seedsupermarketcarts2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shop4U.Supermarkets.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCartegoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.ItemCartegory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemCartegories");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.ItemGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemGroups");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.ItemPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CostPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MarketGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MarketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemPrices");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.ItemType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.Supermarket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Supermarkets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb0d4bee-d24b-4c41-a518-8eeebd62d34f"),
                            Description = "",
                            Name = "Shoprite"
                        },
                        new
                        {
                            Id = new Guid("6e9878d1-b6b0-4e35-8f35-5f8d1346410e"),
                            Description = "",
                            Name = "Justrite"
                        },
                        new
                        {
                            Id = new Guid("2775f8d4-bb30-43c0-b2f1-335e9abfa7cc"),
                            Description = "",
                            Name = "Welcome U"
                        },
                        new
                        {
                            Id = new Guid("70850463-705d-4c0b-9abb-051274e7108d"),
                            Description = "",
                            Name = "Livinchin"
                        },
                        new
                        {
                            Id = new Guid("9261fd44-d4ff-4119-a42c-cc7ed9e869e2"),
                            Description = "",
                            Name = "Spar Mall"
                        },
                        new
                        {
                            Id = new Guid("ac8e047e-e093-4e4a-ac21-445eb06429e2"),
                            Description = "",
                            Name = "Next Cash And Carry"
                        },
                        new
                        {
                            Id = new Guid("786220aa-e27c-4073-859c-f1f2a27ca4fa"),
                            Description = "",
                            Name = "Everyday"
                        },
                        new
                        {
                            Id = new Guid("d89e89f8-b022-4413-93eb-1e97857546f0"),
                            Description = "",
                            Name = "Market Square"
                        },
                        new
                        {
                            Id = new Guid("302df909-f09d-4e3a-b99c-fe23b8e8f29f"),
                            Description = "",
                            Name = "PEP Store"
                        });
                });

            modelBuilder.Entity("Shop4U.Supermarkets.Models.SupermarketCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BackgrounndPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CostPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SupermarketCarts");
                });
#pragma warning restore 612, 618
        }
    }
}
